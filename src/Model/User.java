package Model;
// Generated Dec 4, 2017 10:13:39 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user",
         catalog = "testsystem",
         uniqueConstraints = @UniqueConstraint(columnNames = "login")
)
public class User implements java.io.Serializable {

    private String id;
    private Group group;
    private Role role;
    private String login;
    private String password;
    private String name;
    private Byte deleted;
    private Set<Test> tests = new HashSet<Test>(0);
    private Set<PassedTest> passedTests = new HashSet<PassedTest>(0);

    public User() {
    }

    public User(String id, Role role, String login, String password, String name) {
        this.id = id;
        this.role = role;
        this.login = login;
        this.password = password;
        this.name = name;
        this.deleted = 0;
    }

    public User(String id, Group group, Role role, String login, String password, String name, Byte deleted, Set<Test> tests, Set<PassedTest> passedTests) {
        this.id = id;
        this.group = group;
        this.role = role;
        this.login = login;
        this.password = password;
        this.name = name;
        this.deleted = deleted;
        this.tests = tests;
        this.passedTests = passedTests;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false, length = 36)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "group_id")
    public Group getGroup() {
        return this.group;
    }

    public void setGroup(Group group) {
        this.group = group;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "role_id", nullable = false)
    public Role getRole() {
        return this.role;
    }

    public void setRole(Role role) {
        this.role = role;
    }

    @Column(name = "login", unique = true, nullable = false, length = 45)
    public String getLogin() {
        return this.login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    @Column(name = "password", nullable = false, length = 45)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "name", nullable = false, length = 45)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "deleted")
    public Byte getDeleted() {
        return this.deleted;
    }

    public void setDeleted(Byte deleted) {
        this.deleted = deleted;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<Test> getTests() {
        return this.tests;
    }

    public void setTests(Set<Test> tests) {
        this.tests = tests;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
    public Set<PassedTest> getPassedTests() {
        return this.passedTests;
    }

    public void setPassedTests(Set<PassedTest> passedTests) {
        this.passedTests = passedTests;
    }

}
