package Model;
// Generated Dec 4, 2017 10:13:39 PM by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import static java.util.UUID.randomUUID;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Test generated by hbm2java
 */
@Entity
@Table(name = "test",
        catalog = "testsystem"
)
public class Test implements java.io.Serializable {

    private String id;
    private Subject subject;
    private User user;
    private String title;
    private boolean deleted;
    private List<Question> questions = new ArrayList<Question>(0);
    private List<PassedTest> passedTests = new ArrayList<PassedTest>(0);

    public Test() {
    }

    public Test(Subject subject, User user, String title) {
        this.id = randomUUID().toString();
        this.subject = subject;
        this.user = user;
        this.title = title;
        this.deleted = false;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false, length = 36)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "subject_id", nullable = false)
    public Subject getSubject() {
        return this.subject;
    }

    public void setSubject(Subject subject) {
        this.subject = subject;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "teacher_id", nullable = false)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    @Column(name = "title", nullable = false, length = 45)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Column(name = "deleted")
    public boolean getDeleted() {
        return this.deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    @OneToMany(fetch = FetchType.LAZY,
            mappedBy = "test",
            cascade = {CascadeType.ALL})
    public List<Question> getQuestions() {
        return this.questions;
    }

    public void setQuestions(List<Question> questions) {
        this.questions = questions;
    }

    @OneToMany(fetch = FetchType.LAZY,
            mappedBy = "test",
            cascade = {CascadeType.ALL})
    public List<PassedTest> getPassedTests() {
        return this.passedTests;
    }

    public void setPassedTests(List<PassedTest> passedTests) {
        this.passedTests = passedTests;
    }
}
